package br.com.gerenciadornet.entity;

// Generated 09/02/2010 16:40:06 by Hibernate Tools 3.2.5.Beta

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.validator.NotNull;

/**
 * ServicoRealizado generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "servico_realizado")
public class ServicoRealizado implements java.io.Serializable {

	
	@Embeddable
	public static class ServicoRealizadoID implements Serializable{
		
		private int codServico;
		private int codVenda;
		
		public ServicoRealizadoID(){}

		public ServicoRealizadoID(int codServico, int codVenda) {
			super();
			this.codServico = codServico;
			this.codVenda = codVenda;
		}

		@Override
		public int hashCode() {
			final int prime = 31;
			int result = 1;
			result = prime * result + codServico;
			result = prime * result + codVenda;
			return result;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			ServicoRealizadoID other = (ServicoRealizadoID) obj;
			if (codServico != other.codServico)
				return false;
			if (codVenda != other.codVenda)
				return false;
			return true;
		}

		@Column(name="cod_servico")
		public int getCodServico() {
			return codServico;
		}

		public void setCodServico(int codServico) {
			this.codServico = codServico;
		}
		
		@Column(name="cod_venda")	
		public int getCodVenda() {
			return codVenda;
		}

		public void setCodVenda(int codVenda) {
			this.codVenda = codVenda;
		}
		
		
	}
	
	private ServicoRealizadoID id = new ServicoRealizadoID();
	private Venda venda;
	private Servico servico;
	private float preco;

	public ServicoRealizado() {
	}

	public ServicoRealizado(Venda venda, Servico servico, float preco) {
		this.venda = venda;
		this.servico = servico;
		this.preco = preco;
		
		//definindo os valores identificadores
		this.id.codVenda = venda.getCodVenda();
		this.id.codServico = servico.getCodServico();
		
		//venda.getServicoRealizados().add(this);
		//servico.getServicoRealizados().add(this);
	}
	
	/*@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "venda"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "cod_servico", unique = true, nullable = false)
	public int getCodVenda() {
		return this.codVenda;
	} 

	public void setCodVenda(int codVenda) {
		this.codVenda = codVenda;
	}
*/
	
	
	
	@EmbeddedId
	/*@GeneratedValue(generator="generator")
	@GenericGenerator(name="generator", strategy = "foreign", parameters={@Parameter(name="property", value="venda")})
	@AttributeOverrides( {
		@AttributeOverride(name = "codVenda", column = @Column(name = "cod_venda", nullable = false)),
		@AttributeOverride(name = "codServico", column = @Column(name = "cod_servico", nullable = false)) })*/
	public ServicoRealizadoID getId() {
		return this.id;
	}

	public void setId(ServicoRealizadoID id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_venda", nullable=false, insertable=false, updatable=false)
	@NotNull 
	public Venda getVenda() {
		return this.venda;
	}

	public void setVenda(Venda venda) {
		this.venda = venda;
		this.venda.setCodVenda(venda.getCodVenda());
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="cod_servico", nullable=false, insertable=false, updatable=false)
	public Servico getServico() {
		return this.servico;
	}

	public void setServico(Servico servico) {
		this.servico = servico;
	}

	@Column(name = "preco", nullable = false, precision = 12, scale = 0)
	public float getPreco() {
		return this.preco;
	}

	public void setPreco(float preco) {
		this.preco = preco;
	}

}
