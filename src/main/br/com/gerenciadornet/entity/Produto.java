package br.com.gerenciadornet.entity;

// Generated 09/02/2010 16:40:06 by Hibernate Tools 3.2.5.Beta

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Produto generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "produto")
public class Produto implements java.io.Serializable {

	private Integer 	codProduto;
	private String 		nomeProduto;
	private String 		ncm;
	private String 		codProdutoExterno;
	private String 		descProduto;
	private String 		nomeImagem;
	private String 		localizadorDefault;
	private String 		codigoBarrasProduto;
	private boolean 	inExclusao;
	private Integer 	largura;
	private Integer 	comprimento;
	private Integer 	altura;
	private String 		temperatura;
	private Categoria 	categoria; 
	private String 		unidade			= "Un";
	private Float 		precoVendaDefault  	= new Float(0f);
	private Float 		precoCompraDefault 	= new Float(0f);
	private Float 		peso 			= new Float(0f);
	private Marca 		marca 			= new Marca();
	private Set<LoteProduto> loteProdutos 		= new HashSet<LoteProduto>(0);
	private Set<ImagemProduto> imagensProduto 	= new HashSet<ImagemProduto>(0);
	private Float 		valorComissao  	= new Float(0f);


	public Produto() {
	}

	public Produto(String nomeProduto, boolean inExclusao) {
		this.nomeProduto = nomeProduto;
		this.inExclusao = inExclusao;
	}

	public Produto(Categoria categoria, Marca marca, String nomeProduto,
			String codProdutoExterno, String descProduto, 
			boolean inExclusao, Set<LoteProduto> loteProdutos) {
		this.categoria = categoria;
		this.marca = marca;
		this.nomeProduto = nomeProduto;
		this.codProdutoExterno = codProdutoExterno;
		this.descProduto = descProduto;
		this.inExclusao = inExclusao;
		this.loteProdutos = loteProdutos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "cod_produto", unique = true, nullable = false)
	public Integer getCodProduto() {
		return this.codProduto;
	}

	public void setCodProduto(Integer codProduto) {
		this.codProduto = codProduto;
	}

	@ManyToOne(fetch = FetchType.LAZY) 
	@JoinColumn(name = "cod_categoria")
	public Categoria getCategoria() {
		return this.categoria;
	}

	public void setCategoria(Categoria categoria) {
		this.categoria = categoria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_marca")
	public Marca getMarca() {
		return this.marca;
	}

	public void setMarca(Marca marca) {
		this.marca = marca;
	}

	@Column(name = "nome_produto", nullable = false, length = 120)
	@NotNull
	@Length(max = 120)
	public String getNomeProduto() {
		return this.nomeProduto;
	}

	public void setNomeProduto(String nomeProduto) {
		this.nomeProduto = nomeProduto;
	}
	
	@Column(name = "ncm", length = 20)
	@Length(max = 20)
	public String getNcm() {
		return ncm;
	}

	public void setNcm(String ncm) {
		this.ncm = ncm;
	}

	@Column(name = "cod_produto_externo", length = 20)
	@Length(max = 20)
	public String getCodProdutoExterno() {
		return this.codProdutoExterno;
	}

	public void setCodProdutoExterno(String codProdutoExterno) {
		this.codProdutoExterno = codProdutoExterno;
	}

	@Column(name = "desc_produto", length = 60)
	@Length(max = 60)
	public String getDescProduto() {
		return this.descProduto;
	}

	public void setDescProduto(String descProduto) {
		this.descProduto = descProduto;
	}

	@Column(name = "preco_compra_default", nullable = true, precision = 12, scale = 0)
	public Float getPrecoCompraDefault() {
		return precoCompraDefault;
	}

	public void setPrecoCompraDefault(Float precoCompraDefault) {
		this.precoCompraDefault = precoCompraDefault;
	}

	@Column(name = "preco_venda_default", nullable = true, precision = 12, scale = 0)
	public Float getPrecoVendaDefault() {
		return precoVendaDefault;
	}

	public void setPrecoVendaDefault(Float precoVendaDefault) {
		this.precoVendaDefault = precoVendaDefault;
	}


	@Column(name = "in_exclusao", nullable = false)
	public boolean isInExclusao() {
		return this.inExclusao;
	}

	@Column(name = "localizador_default", length = 20)
	@Length(max = 20)
	public String getLocalizadorDefault() {
		return localizadorDefault;
	}

	public void setLocalizadorDefault(String localizadorDefault) {
		this.localizadorDefault = localizadorDefault;
	}

	@Column(name = "codigo_barras_produto", length = 40)
	@Length(max = 40)
	public String getCodigoBarrasProduto() {
		return codigoBarrasProduto;
	}

	public void setCodigoBarrasProduto(String codigoBarrasProduto) {
		this.codigoBarrasProduto = codigoBarrasProduto;
	}
	
	public void setInExclusao(boolean inExclusao) {
		this.inExclusao = inExclusao;
	}
	
	@Column(name = "largura", nullable = true)
	public Integer getLargura() {
		return largura;
	}

	public void setLargura(Integer largura) {
		this.largura = largura;
	}

	@Column(name = "comprimento", nullable = true)
	public Integer getComprimento() {
		return comprimento;
	}

	public void setComprimento(Integer comprimento) {
		this.comprimento = comprimento;
	}

	@Column(name = "altura", nullable = true)
	public Integer getAltura() {
		return altura;
	}

	public void setAltura(Integer altura) {
		this.altura = altura;
	}

	@Column(name = "peso", nullable = true, precision = 12, scale = 0)
	public Float getPeso() {
		return peso;
	}

	public void setPeso(Float peso) {
		this.peso = peso;
	}

	@Column(name = "unidade", length = 3)
	public String getUnidade() {
		return unidade;
	}

	public void setUnidade(String unidade) {
		this.unidade = unidade;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "produto")
	public Set<LoteProduto> getLoteProdutos() {
		return this.loteProdutos;
	}

	public void setLoteProdutos(Set<LoteProduto> loteProdutos) {
		this.loteProdutos = loteProdutos;
	}

	@OneToMany(mappedBy="produto", cascade={CascadeType.ALL}, fetch=FetchType.LAZY)
	@OrderBy(value="ordemApresentacao ASC")
	public Set<ImagemProduto> getImagensProduto() {
		return imagensProduto;
	}
	public void setImagensProduto(Set<ImagemProduto> imagensProduto) {
		this.imagensProduto = imagensProduto;
	}

	public String getTemperatura() {
	    return temperatura;
	}

	public void setTemperatura(String novoTemperatura) {
	    temperatura = novoTemperatura;
	}

	@Column(name = "nome_imagem", nullable=true, length = 70)
	@Length(max = 70)
	public String getNomeImagem() {
	    return nomeImagem;
	}

	public void setNomeImagem(String novoNomeImagem) {
	    nomeImagem = novoNomeImagem;
	}

	@Column(name = "valor_comissao", nullable = true, precision = 12, scale = 0)
	public Float getValorComissao() {
		return valorComissao;
	}

	public void setValorComissao(Float valorComissao) {
		this.valorComissao = valorComissao;
	}

}
