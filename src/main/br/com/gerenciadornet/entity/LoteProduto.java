package br.com.gerenciadornet.entity;

// Generated 09/02/2010 16:40:06 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * LoteProduto generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "lote_produto")
public class LoteProduto implements java.io.Serializable {

	private Integer codLoteProduto;
	private Produto produto = new Produto();
	private Compra compra;
	private int qtdCompra;	
	private String identificacaoLote;
	private Date dataValidade;
	private Float precoCompraUnidade = new Float(0f);
	private Float precoVendaUnidade= new Float(0f);
	private Integer qtdEstoque;
	private Float prcDescontoMaximo;	
	private String localizador;
	private String codigoBarrasLote;
	private Set<ProdutoVendido> produtoVendidos = new HashSet<ProdutoVendido>(0);

	//utilizado para pesquisar os lotes com qtd = 0
	private transient Integer qtdMinimaEstoque;
	
	public LoteProduto(Integer qtdMinimaEstoque, Date dataValidade) {
		this.qtdMinimaEstoque = qtdMinimaEstoque;
		this.dataValidade = dataValidade;
	}
	
	public LoteProduto() {
	}

	public LoteProduto(Produto produto, Compra compra, int qtdCompra,
			float precoCompraUnidade, float precoVendaUnidade, Integer qtdEstoque) {
		this.produto = produto;
		this.compra = compra;
		this.qtdCompra = qtdCompra;
		this.precoCompraUnidade = precoCompraUnidade;
		this.precoVendaUnidade = precoVendaUnidade;
		this.qtdEstoque = qtdEstoque;
	}
	
	public LoteProduto(LoteProduto loteProduto) {
		this.identificacaoLote = loteProduto.getIdentificacaoLote();
		this.produto = loteProduto.getProduto();
		this.compra = loteProduto.getCompra();
		this.qtdCompra = loteProduto.getQtdCompra();
		this.precoCompraUnidade = loteProduto.getPrecoCompraUnidade();
		this.precoVendaUnidade = loteProduto.getPrecoVendaUnidade();
		this.qtdEstoque = loteProduto.getQtdEstoque();
		this.dataValidade = loteProduto.getDataValidade();
		this.prcDescontoMaximo = loteProduto.getPrcDescontoMaximo();
	}
	
	public LoteProduto(Integer qtdEstoque) {
		this.qtdEstoque = qtdEstoque;
	}
	
	public LoteProduto(Integer qtdCompra, Integer qtdEstoque, Float prcDescontoMaximo) {
		this.qtdCompra = qtdCompra;
		this.qtdEstoque = qtdEstoque;
		this.prcDescontoMaximo = prcDescontoMaximo;
	}
	
	public LoteProduto(Produto produto, Compra compra, int qtdCompra,
			float precoCompraUnidade, String identificacaoLote,
			Date dataValidade, float precoVendaUnidade, Integer qtdEstoque,
			Float prcDescontoMaximo, Set<ProdutoVendido> produtoVendidos) {
		this.produto = produto;
		this.compra = compra;
		this.qtdCompra = qtdCompra;
		this.precoCompraUnidade = precoCompraUnidade;
		this.identificacaoLote = identificacaoLote;
		this.dataValidade = dataValidade;
		this.precoVendaUnidade = precoVendaUnidade;
		this.qtdEstoque = qtdEstoque;
		this.prcDescontoMaximo = prcDescontoMaximo;
		this.produtoVendidos = produtoVendidos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "cod_lote_produto", unique = true, nullable = false)
	public Integer getCodLoteProduto() {
		return this.codLoteProduto;
	}

	public void setCodLoteProduto(Integer codLoteProduto) {
		this.codLoteProduto = codLoteProduto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_produto", nullable = false)
	@NotNull
	public Produto getProduto() {
		return this.produto;
	}

	public void setProduto(Produto produto) {
		this.produto = produto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_compra", nullable = false)
	@NotNull
	public Compra getCompra() {
		return this.compra;
	}

	public void setCompra(Compra compra) {
		this.compra = compra;
	}

	@Column(name = "qtd_compra", nullable = false)
	public int getQtdCompra() {
		return this.qtdCompra;
	}

	public void setQtdCompra(int qtdCompra) {
		this.qtdCompra = qtdCompra;
	}

	@Column(name = "preco_compra_unidade", nullable = false, precision = 12, scale = 0)
	public Float getPrecoCompraUnidade() {
		return this.precoCompraUnidade;
	}

	public void setPrecoCompraUnidade(Float precoCompraUnidade) {
		this.precoCompraUnidade = precoCompraUnidade;
	}

	@Column(name = "identificacao_lote", length = 45)
	@Length(max = 45)
	public String getIdentificacaoLote() {
		return this.identificacaoLote;
	}

	public void setIdentificacaoLote(String identificacaoLote) {
		this.identificacaoLote = identificacaoLote;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_validade", length = 0)
	public Date getDataValidade() {
		return this.dataValidade;
	}

	public void setDataValidade(Date dataValidade) {
		this.dataValidade = dataValidade;
	}

	@Column(name = "preco_venda_unidade", nullable = false, precision = 12, scale = 0)
	public Float getPrecoVendaUnidade() {
		return this.precoVendaUnidade;
	}

	public void setPrecoVendaUnidade(Float precoVendaUnidade) {
		this.precoVendaUnidade = precoVendaUnidade;
	}

	@Column(name = "qtd_estoque", nullable = false)
	public Integer getQtdEstoque() {
		return this.qtdEstoque;
	}

	public void setQtdEstoque(Integer qtdEstoque) {
		this.qtdEstoque = qtdEstoque;
	}

	@Column(name = "prc_desconto_maximo", precision = 12, scale = 0)
	public Float getPrcDescontoMaximo() {
		return this.prcDescontoMaximo;
	}

	public void setPrcDescontoMaximo(Float prcDescontoMaximo) {
		this.prcDescontoMaximo = prcDescontoMaximo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "loteProduto")
	public Set<ProdutoVendido> getProdutoVendidos() {
		return this.produtoVendidos;
	}

	public void setProdutoVendidos(Set<ProdutoVendido> produtoVendidos) {
		this.produtoVendidos = produtoVendidos;
	}

	@Transient
	public Integer getQtdMinimaEstoque() {
		return qtdMinimaEstoque;
	}

	public void setQtdMinimaEstoque(Integer qtdMinimaEstoque) {
		this.qtdMinimaEstoque = qtdMinimaEstoque;
	}

	@Column(name = "localizador", length = 20)
	@Length(max = 20)
	public String getLocalizador() {
		return localizador;
	}

	public void setLocalizador(String localizador) {
		this.localizador = localizador;
	}

	@Column(name = "codigo_barras_lote", length = 40)
	@Length(max = 40)
	public String getCodigoBarrasLote() {
		return codigoBarrasLote;
	}

	public void setCodigoBarrasLote(String codigoBarrasLote) {
		this.codigoBarrasLote = codigoBarrasLote;
	}

}
