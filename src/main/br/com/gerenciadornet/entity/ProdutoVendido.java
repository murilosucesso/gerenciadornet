package br.com.gerenciadornet.entity;

// Generated 09/02/2010 16:40:06 by Hibernate Tools 3.2.5.Beta

import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.NotNull;

/**
 * ProdutoVendido generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "produto_vendido")
public class ProdutoVendido implements java.io.Serializable {

	private ProdutoVendidoId id;
	private Venda venda;
	private LoteProduto loteProduto = new LoteProduto();
	private int qtd = 1;
	private Float desconto = 0f;
	private Float precoVenda;
	
	//atributos utilizados na conferencia de produtos
	private transient int qtdConfirmada = 0;
	private transient boolean qtdTotalSeparada = false;
	
	public ProdutoVendido() {
	}
	
	public ProdutoVendido(LoteProduto loteProduto) {
		this.loteProduto = loteProduto;
	}

	public ProdutoVendido(ProdutoVendidoId id, Venda venda,
			LoteProduto loteProduto, int qtd) {
		this.id = id;
		this.venda = venda;
		this.loteProduto = loteProduto;
		this.qtd = qtd;
	}

	public ProdutoVendido(ProdutoVendidoId id, Venda venda,
			LoteProduto loteProduto, int qtd, Float desconto, Float precoVenda) {
		this.id = id;
		this.venda = venda;
		this.loteProduto = loteProduto;
		this.qtd = qtd;
		this.desconto = desconto;
		this.precoVenda = precoVenda;
	}
	
	@EmbeddedId
	/*@AttributeOverrides( {
			@AttributeOverride(name = "codLoteProduto", column = @Column(name = "cod_lote_produto", nullable = false)),
			@AttributeOverride(name = "codVenda", column = @Column(name = "cod_venda", nullable = false)) })*/
	@NotNull
	public ProdutoVendidoId getId() {
		return this.id;
	}

	public void setId(ProdutoVendidoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_venda", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Venda getVenda() {
		return this.venda;
	}

	public void setVenda(Venda venda) {
		this.venda = venda;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_lote_produto", nullable = false, insertable = false, updatable = false)
	@NotNull
	public LoteProduto getLoteProduto() {
		return this.loteProduto;
	}

	public void setLoteProduto(LoteProduto loteProduto) {
		this.loteProduto = loteProduto;
	}

	@Column(name = "qtd", nullable = false)
	public int getQtd() {
		return this.qtd;
	}

	public void setQtd(int qtd) {
		this.qtd = qtd;
	}

	@Column(name = "desconto", precision = 12, scale = 0)
	public Float getDesconto() {
		return this.desconto;
	}

	public void setDesconto(Float desconto) {
		this.desconto = desconto;
	}

	@Column(name = "preco_venda", precision = 12, scale = 0)
	public Float getPrecoVenda() {
		return this.precoVenda;
	}

	public void setPrecoVenda(Float precoVenda) {
		this.precoVenda = precoVenda;
	}
	
	@Transient
	public int getQtdConfirmada() {
	    return qtdConfirmada;
	}

	public void setQtdConfirmada(int novoQtdConfirmada) {
	    qtdConfirmada = novoQtdConfirmada;
	}
	
	@Transient
	public boolean isQtdTotalSeparada() {
	    return qtdTotalSeparada;
	}

	public void setQtdTotalSeparada(boolean novoQtdTotalSeparada) {
	    qtdTotalSeparada = novoQtdTotalSeparada;
	}

}
